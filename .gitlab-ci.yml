stages:
  - build
  - test

.create_conda_envs:
  parallel:
    matrix:
      - PYTHON_VERSION: ['3.7', '3.8', '3.9'] # 3.10
  script:
    - conda --version
    - conda create --yes python=$PYTHON_VERSION --name leaspy_env_${PYTHON_VERSION}_${CI_COMMIT_BRANCH} || true  # use 'create --yes' to force re-creation of env if already exists
    - conda activate leaspy_env_${PYTHON_VERSION}_${CI_COMMIT_BRANCH}
    - >
      if [ "$PYTHON_VERSION" == "3.9" ]; then
        export AR=/usr/bin/ar
      fi
    - pip install -U -r requirements.txt
    - conda deactivate

.update_conda:
  script:
    - conda init bash
    - eval "$(conda shell.bash hook)"
    - conda update --name base --channel defaults --yes conda

.tests:
  parallel:
    matrix:
      - PYTHON_VERSION: ['3.7', '3.8', '3.9'] # 3.10
  script:
    - conda activate leaspy_env_${PYTHON_VERSION}_${CI_COMMIT_BRANCH}
    - python --version
    - pip freeze
    - pytest --cov-config=.coveragerc --cov-report html:htmlcov --cov-report xml:build/coverage.xml --cov-report term --cov=leaspy/ --junitxml=build/tests_results/tests_${PYTHON_VERSION}.xml tests/
    - conda deactivate
  coverage: '/^TOTAL(?:\s+.*){2}\s+(\d+(?:\.\d+)?\%)$/'
  artifacts:
    paths:
      - htmlcov/  # for people to browse if they want (in addition to Gitlab tool)
    reports:
      cobertura: build/coverage.xml  # will be directly integrated to Gitlab coverage tool (MR)
      junit: build/tests_results/tests_*.xml  # will be directly integrated to Gitlab tests tool
    expire_in: 30 days

update_conda_linux:
  extends: .update_conda
  stage: build
  tags:
    - linux

update_conda_macos:
  extends: .update_conda
  stage: build
  tags:
    - macos

create_conda_envs_macos:
  extends: .create_conda_envs
  stage: build
  tags:
    - macos

create_conda_envs_linux:
  extends: .create_conda_envs
  stage: build
  tags:
    - linux

tests_macos:
  extends: .tests
  stage: test
  retry: 0  # no retry if failed
  interruptible: true  # job should be canceled when a newer pipeline starts before the job completes
  tags:
    - macos

tests_linux:
  extends: .tests
  stage: test
  retry: 0  # no retry if failed
  interruptible: true  # job should be canceled when a newer pipeline starts before the job completes
  tags:
   - linux
